version: '3'

services:
  reverse-proxy:
    # The official v2.0 Traefik docker image
    image: traefik:v2.0
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - "--log.level=DEBUG"
#      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file=true"
      - "--providers.file.filename=/traefik_dynamic.toml"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
#      - "--certificatesresolvers.myhttpchallenge.acme.httpchallenge=true"
#      - "--certificatesresolvers.myhttpchallenge.acme.httpchallenge.entrypoint=web"
#      - "--certificatesresolvers.myhttpchallenge.acme.email=postmaster@mydomain.com"
#      - "--certificatesresolvers.myhttpchallenge.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
#      - "--certificatesresolvers.myhttpchallenge.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    labels:
      - "traefik.enable=true"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - "/docker/nfs_mount/traefik/letsencrypt:/letsencrypt:Z"
      - "/etc/ssl/private:/etc/ssl/private:Z"
      - "/docker/nfs_mount/traefik/traefik_dynamic.toml:/traefik_dynamic.toml"
#      - /opt/traefik/acme.json:/acme.json
    networks:
      outside-world:
      internal-network:

networks:
 #   everything that is *only* on "internal network" cannot talk to WAN
  internal-network:
    internal: true
 #   add this network to a container to make it talk to the rest of the world
  outside-world:
    external:
      name: traefik_outside-world
